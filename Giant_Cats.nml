grf {
	grfid: "CAT\01";
	name: string(STR_GRF_NAME);
	desc: string(STR_GRF_DESC);
	url	 : string(STR_GRF_WEBSITE);
	version: 1;
	min_compatible_version: 1;
}

template template_empty () {[
	0,		// Image X offset
	0,		// Image Y offset
	64,		// X size
	64,		// Y size
	-32,	// Map X offset
	-32		// Map Y offset
]}

template offset_slice(w, h, off, yoff, yoff2) {[
	off * 128,				// Image X offset
	yoff * 128,				// Image Y offset
	128,					// X size
	h - yoff * 128,			// Y size
	-128,					// Map X offset
	-h + yoff * 64 + yoff2	// Map Y offset
]}

// sprites
spriteset(			spriteset_cat_1_00, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_00, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 00, 00, 128) }
spritelayout	 spritelayout_cat_1_00 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:      spriteset_cat_1_00; zextent: 255; } }

spriteset(			spriteset_cat_1_01, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_01, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 01, 01, 128) }
spritelayout	 spritelayout_cat_1_01 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:      spriteset_cat_1_01; zextent: 255; } }

spriteset(			spriteset_cat_1_02, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_02, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 02, 02, 128) }
spritelayout	 spritelayout_cat_1_02 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:      spriteset_cat_1_02; zextent: 255; } }

spriteset(			spriteset_cat_1_03, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_03, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 03, 03, 128) }
spritelayout	 spritelayout_cat_1_03 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:      spriteset_cat_1_03; zextent: 255; } }

// Assemble several sprites
switch(FEAT_OBJECTS, SELF, switch_spritelayout_cat_1_row_0, relative_pos) {
	0x0000: spritelayout_cat_1_00;
	0x0100: spritelayout_cat_1_01;
	0x0200: spritelayout_cat_1_02;
	0x0300: spritelayout_cat_1_03;
}

// sprites
spriteset(			spriteset_cat_1_04, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_04, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 04, 3, 192) }
spritelayout	 spritelayout_cat_1_04 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:    spriteset_cat_1_04; zextent: 255; } }

spriteset(			spriteset_cat_1_05, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_05, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 05, 2, 192) }
spritelayout	 spritelayout_cat_1_05 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:    spriteset_cat_1_05; zextent: 255; } }

spriteset(			spriteset_cat_1_06, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_06, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 06, 1, 192) }
spritelayout	 spritelayout_cat_1_06 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:    spriteset_cat_1_06; zextent: 255; } }

spriteset(			spriteset_cat_1_07, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_07, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 07, 0, 192) }
spritelayout	 spritelayout_cat_1_07 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:    spriteset_cat_1_07; zextent: 255; } }

// Assemble several sprites
switch(FEAT_OBJECTS, SELF, switch_spritelayout_cat_1_row_1, relative_pos) {
	0x0003: spritelayout_cat_1_04;
	0x0002: spritelayout_cat_1_05;
	0x0001: spritelayout_cat_1_06;
	0x0000: spritelayout_cat_1_07;
}

// sprites
spriteset(			spriteset_cat_1_08, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_08, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 08, 0, 128) }
spritelayout	 spritelayout_cat_1_08 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:    spriteset_cat_1_08; zextent: 255; } }

spriteset(			spriteset_cat_1_09, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_09, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 09, 1, 128) }
spritelayout	 spritelayout_cat_1_09 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:    spriteset_cat_1_09; zextent: 255; } }

spriteset(			spriteset_cat_1_10, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_10, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 10, 2, 128) }
spritelayout	 spritelayout_cat_1_10 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:    spriteset_cat_1_10; zextent: 255; } }

spriteset(			spriteset_cat_1_11, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_11, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 11, 3, 128) }
spritelayout	 spritelayout_cat_1_11 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:    spriteset_cat_1_11; zextent: 255; } }

// Assemble several sprites
switch(FEAT_OBJECTS, SELF, switch_spritelayout_cat_1_row_2, relative_pos) {
	0x0000: spritelayout_cat_1_08;
	0x0100: spritelayout_cat_1_09;
	0x0200: spritelayout_cat_1_10;
	0x0300: spritelayout_cat_1_11;
}

// sprites
spriteset(			spriteset_cat_1_12, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_12, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 12, 3, 192) }
spritelayout	 spritelayout_cat_1_12 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:    spriteset_cat_1_12; zextent: 255; } }

spriteset(			spriteset_cat_1_13, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_13, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 13, 2, 192) }
spritelayout	 spritelayout_cat_1_13 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:    spriteset_cat_1_13; zextent: 255; } }

spriteset(			spriteset_cat_1_14, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_14, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 14, 1, 192) }
spritelayout	 spritelayout_cat_1_14 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:    spriteset_cat_1_14; zextent: 255; } }

spriteset(			spriteset_cat_1_15, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_15, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1.png") { offset_slice(1978, 1920, 15, 0, 192) }
spritelayout	 spritelayout_cat_1_15 { ground { sprite: GROUNDSPRITE_NORMAL; } building { sprite:    spriteset_cat_1_15; zextent: 255; } }

// Assemble several sprites
switch(FEAT_OBJECTS, SELF, switch_spritelayout_cat_1_row_3, relative_pos) {
	0x0003: spritelayout_cat_1_12;
	0x0002: spritelayout_cat_1_13;
	0x0001: spritelayout_cat_1_14;
	0x0000: spritelayout_cat_1_15;
}

// decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_spritelayout_cat_1_view, view) {
	0: switch_spritelayout_cat_1_row_0;
	1: switch_spritelayout_cat_1_row_1;
	2: switch_spritelayout_cat_1_row_2;
	3: switch_spritelayout_cat_1_row_3;
}

switch (FEAT_OBJECTS, SELF, switch_spritelayout_cat_1_purchase, view) {
	//0: spritelayout_cat_1_02;
	//1: spritelayout_cat_1_06;
	//2: spritelayout_cat_1_10;
	//3: spritelayout_cat_1_14;
	0: switch_spritelayout_cat_1_row_0;
	1: switch_spritelayout_cat_1_row_1;
	2: switch_spritelayout_cat_1_row_2;
	3: switch_spritelayout_cat_1_row_3;
}

// calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_cat_1_purchase, [
		//use flat gound sprite for purchase menu
		STORE_TEMP(0, 0),
		//use normal terrain for purchase menu
		STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		]) {
	switch_spritelayout_cat_1_purchase;
}

item (FEAT_OBJECTS, item_cat_1) {
	property {
		class:					"CATS";
		classname:				string(STR_CAT_CLASSNAME);
		name:					string(STR_CAT_1);
		climates_available:		ALL_CLIMATES;
		size:					[1,4];
		build_cost_multiplier:	4;
		remove_cost_multiplier: 4;
		introduction_date:		date(1890,1,1);
		end_of_life_date:		0xFFFFFFFF;
		object_flags:			bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER);
		height:					4;
		num_views:				4;
		count_per_map256:		2;
	}
	graphics {
		default:			switch_spritelayout_cat_1_view;
		purchase:			switch_cat_1_purchase;
		autoslope:			return(CB_RESULT_AUTOSLOPE);
		additional_text:	string(STR_CAT_1_INFO);
	}
}
