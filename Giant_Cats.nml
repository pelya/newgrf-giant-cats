
// Tree sprites are 1576 to 1708, arctic trees are sprites 1709 to 1820, tropical trees are 1821 to 1946, toyland trees are 1947-2009

switch (FEAT_OBJECTS, SELF, switch_cat_1, [
		// We store the offset into the spriteset due to the tile slope into the 1st temporary variable
		//STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
		// We store the offset to the flat groundsprite we use into the 2nd temporary variable
		STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT :
					terrain_type == TILETYPE_SNOW ? GROUNDSPRITE_SNOW :
					GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP((nearby_tile_water_class(0,0) == WATER_CLASS_SEA || ((random_bits % 2) == 0)) ? 4076 :
					climate == CLIMATE_TEMPERATE ?
						1576 + ((relative_pos * 3 + random_bits) % (1709 - 1576)) :
					climate == CLIMATE_ARCTIC ?
						1709 + ((relative_pos * 3 + random_bits) % (1821 - 1709)) :
					climate == CLIMATE_TROPIC ?
						1821 + ((relative_pos * 3 + random_bits) % (1947 - 1821)) :
						1947 + ((relative_pos * 3 + random_bits) % (2010 - 1947))
					, 2),
		1
		]) {
	switch_spritelayout_cat_1;
}

spriteset(spriteset_cat_1_thumb, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_1_thumb, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_1_thumb.png") {[
	0, 0, 256, 134, -128, 0 ]}
spritelayout spritelayout_cat_1_thumb { ground { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); } building { sprite: spriteset_cat_1_thumb; } }

// calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_cat_1_purchase, [
		//use flat gound sprite for purchase menu
		STORE_TEMP(0, 0),
		//use normal terrain for purchase menu
		STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		]) {
	spritelayout_cat_1_thumb;
}

item (FEAT_OBJECTS, item_cat_1) {
	property {
		class:					"CATS";
		classname:				string(STR_CAT_CLASSNAME);
		name:					string(STR_CAT_1);
		climates_available:		ALL_CLIMATES;
		size:					[14,11];
		build_cost_multiplier:	4;
		remove_cost_multiplier: 4;
		introduction_date:		date(1890,1,1);
		end_of_life_date:		0xFFFFFFFF;
		object_flags:			bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER);
		height:					4;
		num_views:				1;
		count_per_map256:		1;
	}
	graphics {
		default:			switch_cat_1;
		purchase:			switch_cat_1_purchase;
		autoslope:			return(CB_RESULT_AUTOSLOPE);
		additional_text:	string(STR_CAT_1_INFO);
	}
}

switch (FEAT_OBJECTS, SELF, switch_cat_2, [
		// We store the offset into the spriteset due to the tile slope into the 1st temporary variable
		//STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
		// We store the offset to the flat groundsprite we use into the 2nd temporary variable
		STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT :
					terrain_type == TILETYPE_SNOW ? GROUNDSPRITE_SNOW :
					GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP((nearby_tile_water_class(0,0) == WATER_CLASS_SEA || ((random_bits % 2) == 0)) ? 4076 :
					climate == CLIMATE_TEMPERATE ?
						1576 + ((relative_pos * 3 + random_bits) % (1709 - 1576)) :
					climate == CLIMATE_ARCTIC ?
						1709 + ((relative_pos * 3 + random_bits) % (1821 - 1709)) :
					climate == CLIMATE_TROPIC ?
						1821 + ((relative_pos * 3 + random_bits) % (1947 - 1821)) :
						1947 + ((relative_pos * 3 + random_bits) % (2010 - 1947))
					, 2),
		1
		]) {
	switch_spritelayout_cat_2;
}

spriteset(spriteset_cat_2_thumb, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_2_thumb, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_2_thumb.png") {[
	0, 0, 221, 256, -110, -100 ]}
spritelayout spritelayout_cat_2_thumb { ground { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); } building { sprite: spriteset_cat_2_thumb; } }

// calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_cat_2_purchase, [
		//use flat gound sprite for purchase menu
		STORE_TEMP(0, 0),
		//use normal terrain for purchase menu
		STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		]) {
	spritelayout_cat_2_thumb;
}

item (FEAT_OBJECTS, item_cat_2) {
	property {
		class:					"CATS";
		classname:				string(STR_CAT_CLASSNAME);
		name:					string(STR_CAT_2);
		climates_available:		ALL_CLIMATES;
		size:					[15,14];
		build_cost_multiplier:	4;
		remove_cost_multiplier: 4;
		introduction_date:		date(1890,1,1);
		end_of_life_date:		0xFFFFFFFF;
		object_flags:			bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER);
		height:					4;
		num_views:				1;
		count_per_map256:		1;
	}
	graphics {
		default:			switch_cat_2;
		purchase:			switch_cat_2_purchase;
		autoslope:			return(CB_RESULT_AUTOSLOPE);
		additional_text:	string(STR_CAT_2_INFO);
	}
}

switch (FEAT_OBJECTS, SELF, switch_cat_3, [
		// We store the offset into the spriteset due to the tile slope into the 1st temporary variable
		//STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
		// We store the offset to the flat groundsprite we use into the 2nd temporary variable
		STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT :
					terrain_type == TILETYPE_SNOW ? GROUNDSPRITE_SNOW :
					GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP((nearby_tile_water_class(0,0) == WATER_CLASS_SEA || ((random_bits % 2) == 0)) ? 4076 :
					climate == CLIMATE_TEMPERATE ?
						1576 + ((relative_pos * 3 + random_bits) % (1709 - 1576)) :
					climate == CLIMATE_ARCTIC ?
						1709 + ((relative_pos * 3 + random_bits) % (1821 - 1709)) :
					climate == CLIMATE_TROPIC ?
						1821 + ((relative_pos * 3 + random_bits) % (1947 - 1821)) :
						1947 + ((relative_pos * 3 + random_bits) % (2010 - 1947))
					, 2),
		1
		]) {
	switch_spritelayout_cat_3;
}

spriteset(spriteset_cat_3_thumb, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_3_thumb, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_3_thumb.png") {[
	0, 0, 256, 219, -128, -100 ]}
spritelayout spritelayout_cat_3_thumb { ground { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); } building { sprite: spriteset_cat_3_thumb; } }

// calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_cat_3_purchase, [
		//use flat gound sprite for purchase menu
		STORE_TEMP(0, 0),
		//use normal terrain for purchase menu
		STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		]) {
	spritelayout_cat_3_thumb;
}

item (FEAT_OBJECTS, item_cat_3) {
	property {
		class:					"CATS";
		classname:				string(STR_CAT_CLASSNAME);
		name:					string(STR_CAT_3);
		climates_available:		ALL_CLIMATES;
		size:					[12,12];
		build_cost_multiplier:	4;
		remove_cost_multiplier: 4;
		introduction_date:		date(1890,1,1);
		end_of_life_date:		0xFFFFFFFF;
		object_flags:			bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER);
		height:					4;
		num_views:				1;
		count_per_map256:		1;
	}
	graphics {
		default:			switch_cat_3;
		purchase:			switch_cat_3_purchase;
		autoslope:			return(CB_RESULT_AUTOSLOPE);
		additional_text:	string(STR_CAT_3_INFO);
	}
}

switch (FEAT_OBJECTS, SELF, switch_cat_4, [
		// We store the offset into the spriteset due to the tile slope into the 1st temporary variable
		//STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
		// We store the offset to the flat groundsprite we use into the 2nd temporary variable
		STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT :
					terrain_type == TILETYPE_SNOW ? GROUNDSPRITE_SNOW :
					GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP((nearby_tile_water_class(0,0) == WATER_CLASS_SEA || ((random_bits % 2) == 0)) ? 4076 :
					climate == CLIMATE_TEMPERATE ?
						1576 + ((relative_pos * 3 + random_bits) % (1709 - 1576)) :
					climate == CLIMATE_ARCTIC ?
						1709 + ((relative_pos * 3 + random_bits) % (1821 - 1709)) :
					climate == CLIMATE_TROPIC ?
						1821 + ((relative_pos * 3 + random_bits) % (1947 - 1821)) :
						1947 + ((relative_pos * 3 + random_bits) % (2010 - 1947))
					, 2),
		1
		]) {
	switch_spritelayout_cat_4;
}

spriteset(spriteset_cat_4_thumb, "gfx/empty.png") { template_empty() }
alternative_sprites(spriteset_cat_4_thumb, ZOOM_LEVEL_IN_4X, BIT_DEPTH_32BPP, "gfx/cat_4_thumb.png") {[
	0, 0, 256, 125, -110, -50 ]}
spritelayout spritelayout_cat_4_thumb { ground { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); } building { sprite: spriteset_cat_4_thumb; } }

// calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_cat_4_purchase, [
		//use flat gound sprite for purchase menu
		STORE_TEMP(0, 0),
		//use normal terrain for purchase menu
		STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		]) {
	spritelayout_cat_4_thumb;
}

item (FEAT_OBJECTS, item_cat_4) {
	property {
		class:					"CATS";
		classname:				string(STR_CAT_CLASSNAME);
		name:					string(STR_CAT_4);
		climates_available:		ALL_CLIMATES;
		size:					[15,15];
		build_cost_multiplier:	4;
		remove_cost_multiplier: 4;
		introduction_date:		date(1890,1,1);
		end_of_life_date:		0xFFFFFFFF;
		object_flags:			bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER);
		height:					4;
		num_views:				1;
		count_per_map256:		1;
	}
	graphics {
		default:			switch_cat_4;
		purchase:			switch_cat_4_purchase;
		autoslope:			return(CB_RESULT_AUTOSLOPE);
		additional_text:	string(STR_CAT_4_INFO);
	}
}
